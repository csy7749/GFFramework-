//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Game.Hotfix.Cfg.Item
{

public sealed partial class UIForm :  Bright.Config.BeanBase 
{
    public UIForm(JSONNode _json) 
    {
        { if(!_json["Id"].IsNumber) { throw new SerializationException(); }  Id = _json["Id"]; }
        { if(!_json["AssetName"].IsString) { throw new SerializationException(); }  AssetName = _json["AssetName"]; }
        { if(!_json["UIGroupName"].IsString) { throw new SerializationException(); }  UIGroupName = _json["UIGroupName"]; }
        { if(!_json["AllowMultiInstance"].IsBoolean) { throw new SerializationException(); }  AllowMultiInstance = _json["AllowMultiInstance"]; }
        { if(!_json["PauseCoveredUIForm"].IsBoolean) { throw new SerializationException(); }  PauseCoveredUIForm = _json["PauseCoveredUIForm"]; }
        PostInit();
    }

    public UIForm(int Id, string AssetName, string UIGroupName, bool AllowMultiInstance, bool PauseCoveredUIForm ) 
    {
        this.Id = Id;
        this.AssetName = AssetName;
        this.UIGroupName = UIGroupName;
        this.AllowMultiInstance = AllowMultiInstance;
        this.PauseCoveredUIForm = PauseCoveredUIForm;
        PostInit();
    }

    public static UIForm DeserializeUIForm(JSONNode _json)
    {
        return new Item.UIForm(_json);
    }

    /// <summary>
    /// 界面编号
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 资源名称
    /// </summary>
    public string AssetName { get; private set; }
    /// <summary>
    /// 界面组名称
    /// </summary>
    public string UIGroupName { get; private set; }
    /// <summary>
    /// 是否允许多个界面实例
    /// </summary>
    public bool AllowMultiInstance { get; private set; }
    /// <summary>
    /// 是否暂停被其覆盖的界面
    /// </summary>
    public bool PauseCoveredUIForm { get; private set; }

    public const int __ID__ = -152115053;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "AssetName:" + AssetName + ","
        + "UIGroupName:" + UIGroupName + ","
        + "AllowMultiInstance:" + AllowMultiInstance + ","
        + "PauseCoveredUIForm:" + PauseCoveredUIForm + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
